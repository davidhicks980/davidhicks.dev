@use 'mixins/fonts' as *;
@use 'mixins/shadows' as *;
@use 'mixins/borders' as *;
@mixin animate-expand(
  $name: '',
  $duration: 1s,
  $delay: 0s,
  $iterations: 1,
  $direction: normal,
  $timing-fn: linear,
  $fill-mode: both
) {
  animation: $name $duration $delay $iterations $direction $timing-fn $fill-mode;
}

p ::slotted([slot='description']) {
  @include gen-font-var(
    description,
    (
      'weight': 400,
      'size': 12pt,
      'color': black,
    )
  );
}

h1 ::slotted([slot='header']) {
  margin: 0px;
  margin-block: 0px;
  display: content;
  @include gen-font-var(
    header,
    (
      'weight': 500,
      'size': 20pt,
      'family': monospace,
      'color': black,
    )
  );
}

:host {
  opacity: 1;
  transition: opacity 1s ease;
}
:host(.is-expanding) {
  opacity: 0.99;
}
.expansion {
  all: unset;
  display: grid;
  grid-template-columns: 120px calc(70% - 1em);
  grid-template-areas: 'image summary';
  background-color: white;
  text-align: left;
  gap: 1em;
  border: var(--panel--border);
  cursor: pointer;
  margin-bottom: 10px;
  border-radius: 7px;
  filter: brightness(1);
  width: min-max(200px, 600px);
  @include hoverable-shadow(3);
  :host([open]) & {
    @include radius('top', 7px);
  }
  &:active {
    filter: brightness(0.9);
  }
  &__img {
    grid-area: image;
    height: 100%;
    width: 100%;
    background-color: var(--primary-9);
    transition: background-size 500ms ease, filter 500ms ease-in-out;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 80%;
    @include radius('left', 7px);
    :host(:hover) & {
      filter: hue-rotate(45deg);
    }
    :host([open]) & {
      @include radius('top-left', 7px);
    }
  }
  &__summary {
    grid-area: summary;
    background: white;
    color: var(--gray-8);
    &__title {
      line-height: 0px;
    }
    &__ruler {
      border: solid var(--primary-8);
      width: 3em;
      margin: 0px;
      border-width: 2px 0 0 0;
    }
  }
  &__content {
    overflow: hidden;

    &__transform-wrapper {
      border-radius: 8px;
      background-color: var(--primary-8);

      height: 0px;
      :host([open]) & {
        @include radius('bottom', 8px);

        visibility: visible;
        height: auto;
        padding: 10px;
      }
    }
    &__anime {
      border-radius: 7px;
      background: rgb(242 242 242);
      padding: 10px;
    }
  }
}
