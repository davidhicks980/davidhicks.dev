@use 'styles/mixins/button' as button;
@use 'styles/mixins/shadow-root' as root;

:host {
  --font-size: 10pt;
  --list-item--font-weight: 400;
  --list-item--font: var(--list-item--font-weight) var(--font-size);
  //Item variables
  // --list-item--margin: calc(var(--font-size) * 0.825); // Padding around the item
  --list-item--height: calc(var(--font-size) * 2);
  --list-item--font-color: var(--gray-9); //Dimensions
  --list-item--font-family: var(--body-font); //Dimensions

  //List variables
  --head--margin: calc(var(--font-size) * 1.75);
  --list--item-count: 0;
  --list--header-font: bold calc(var(--font-size) * 1.25) var(--body-font)
    sans-serif;
  --list--top: 90px;
  //Track variables
  --track--height: calc(
    var(--list-item--height) + var(--head--margin) / var(--list--item-count)
  );
  --track--scale: scaleY(var(--list--item-count));
  --track--width: 2rem;
  //Host variables
  --host--height: calc(
    (var(--list-item--height) * var(--list--item-count)) + var(--head--margin) +
      3rem
  );
  --host--width: 95%;
  --host--position: sticky;
  //  --host--top: calc(var(--toolbar-height, 20vh) + 5vh);
  --list--width: inherit;
}

@keyframes circle {
  from {
    clip-path: circle(0% at top right);
  }

  to {
    clip-path: circle(125%);
  }
}

:host {
  --host--position: sticky;
  --host--background: transparent;
  /// Grid
  display: flex;
  flex-direction: column;
  height: var(--host--height);
  overflow: visible;
  pointer-events: none;
  position: var(--host--position);
  //Layout
  top: var(--host--top);
  top: var(--toolbar-height);
  //Dimensions
  width: var(--host--width);
  @include root.state('[mobile]') {
    --host--width: 100vw;
    --host--height: 100vh;
    --host--position: fixed;
    --font-size: 1.25rem;
    --list-item--font-color: white;
    align-items: center;
    padding: 1rem;
    justify-content: center;
    top: -30px;

    @include root.state('[open]') {
      & hicks-list-item {
        opacity: 1;
        transform: scale(1) translateX(0);
        transition-delay: 300ms;
      }
    }

    & hicks-list-item {
      opacity: 0;
      transform: scale(0.5) translateX(10rem);
      transform-origin: center center;
      transition: 300ms cubic-bezier(0.25, 0.1, 0.25, 1);
      transition-delay: 0s;
      z-index: 2;
    }
  }
}

.toc {
  &__list {
    display: block;
    grid-area: content;
    width: var(--list--width);

    * {
      padding-left: 0;
      pointer-events: none;
    }

    &__link-icon {
      vertical-align: middle;
    }

    &:host {
      @include root.state('[mobile]') {
        --list--width: 75vw;
        align-items: center;
        display: flex;
        flex-direction: column;
        overflow: hidden;
      }
    }
  }
  /* &__track {
        grid-area: track;
        width: var(--track--width);
         :host([mobile]) & {
            grid-area: none;
        }
    }*/
  &__head {
    border-bottom: 1px solid var(--gray-7);
    font: var(--list--header-font);
    grid-area: header;
    height: var(--head--margin);
  }
}

/*
.track {
    //Dimensions
    height: var(--track--height); //Layout
    position: absolute;
    //Transforms
    transform: scaleY(var(--list--item-count));
    will-change: transform;
    transition: transform var(--list-item--transition--timing) cubic-bezier(0.075, 0.82, 0.165, 1);
    transform-origin: top left;
    //Misc
    border: solid var(--primary-7);
    border-width: 0 0 0 2px;
}
*/

.expand-button {
  @include button.button(1.5rem, 15ch, 1rem);
}

.button__wrapper {
  top: 0.8rem;
  right: 2rem;
  pointer-events: all;
  position: fixed;
  :host(:not([mobile])) & {
    display: none;
  }
  /*radial-gradient(20% 25% at 52% 85%, var(--primary-12) 100%, var(--primary-12) 100%, transparent 100%),radial-gradient(20% 40% at 75% 90%, var(--primary-12) 93%, var(--primary-12) 50%, transparent 50%),radial-gradient(20% 40% at 25% 90%, var(--primary-12) 100%, var(--primary-12) 50%, transparent 50%)*/
  .background {
    animation-fill-mode: forwards;
    background-color: var(--primary-12);
    clip-path: circle(20px at 50% 50%);
    height: 50px;
    overflow: visible;
    padding-right: 18px;
    position: fixed;
    right: 1rem;
    top: 6px;
    transform: scale(1);
    transform-origin: 70% 30%;
    transition-duration: 500ms;
    transition-property: transform;
    transition-timing-function: ease-in-out;
    width: 50px;
    z-index: 2;

    :host([open]) & {
      pointer-events: all;
      transform: scale(30);
      z-index: 0;
    }
  }
}
