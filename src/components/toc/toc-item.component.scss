@use 'mixins' as *;
@use 'styles/mixins/shadow-root' as root;

@use 'styles/mixins/responsive' as *;

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}
/*
.transition--fade-in {
  animation-name: fade-in;
  animation-timing-function: cubic-bezier(0.43, 0.04, 1, -0.1);
  animation-duration: calc(var(--list-item--index) * 75ms);
  animation-iteration-count: 1;
}*/
:host {
  width: inherit;
  //Layout
  display: list-item;
  padding-left: 0.5em;
  list-style-type: none;
  //Misc
  font: var(--list-item--font);
  min-width: 15ch;
  outline: none;
  color: var(--list-item--font-color);
  @media (prefers-reduced-motion) {
    transition: none;
    transform: none;
    opacity: 1;
  }
  @include media-size(zero, medium) {
    width: inherit;
    display: none;
    @include root.state('[top-level]') {
      display: block;
      font-size: 2rem;
      padding: 1rem;
    }
  }

  //If the user is interested in having items expand when the client scrolls past their respective sections, this section handles most of the related styling
  /* will-change: transform;
  transition: 0.3s ease-in-out 0s;
  transform: translateY(
    calc(-1 * (var(--list-item--offset, 0) * var(--list-item--height, 0)))
  );
  transition-property: transform opacity;
  @include root.state('[hidden]') {
    will-change: transform;
    transform: translateY(calc(-1 * (var(--list-item--offset, 0))));
  }*/

  .sublist {
    margin: 0px;
    padding: 0px 0px 0px 1rem;
    /* visibility: hidden;
     opacity: 0;*/
    /* @media (prefers-reduced-motion) {
      visibility: visible;
    }
    @include root.state('[expanded]') {
      visibility: visible;
      opacity: 1;
    }*/
  }
}

.item {
  margin: 0.25rem 0rem;
  &__content {
    display: grid;
    grid-template-areas: 'icon link button';
    grid-template-columns: 2fr 8fr 2fr;
    align-items: center;
    //height: var(--list-item--height);

    &__prefix {
      grid-area: icon;
      :host([active]:not([top-level])) {
        content: 'â—†';
      }
    }
    @include media-size(zero, small) {
      width: inherit;
    }

    &__a {
      text-decoration: none;
      grid-area: link;
      box-sizing: border-box;
    }
    &__link {
      color: var(--list-item--font-color);
      :host([active]) & {
        color: var(--primary-10);
        font-weight: 500;
      }
      font-family: var(--list-item--font-family);
    }
    &__suffix {
      width: var(--list-item--height);
      grid-area: button;
    }
    :host([top-level]) &__link {
      font-weight: 500;
    }
  }
}
