@use 'mixins' as *;
@mixin host($state) {
  :host([mobile]) & {
    @content;
  }
}

:host {
  --font-size: 1rem;
  --item--font-weight: 400;
  --item--font: var(--item--font-weight) var(--font-size) var(--body-font),
    sans-serif;
  //Item variables
  --item--margin: calc(var(--font-size) * 0.825); // Padding around the item
  --item--height: calc(var(--font-size) + var(--item--margin));
  --item--transition--timing: 0.5s;
  --item--font-color: var(--gray-9); //Dimensions
  //List variables
  --head--margin: calc(var(--font-size) * 1.75);
  --list--item-count: 0;
  --list--header-font: bold calc(var(--font-size) * 1.25) var(--body-font),
    sans-serif;
  --list--top: 90px;
  //Track variables
  --track--height: calc(
    var(--item--height) + var(--head--margin) / var(--list--item-count)
  );
  --track--scale: scaleY(var(--list--item-count));
  --track--width: 2rem;
  //Host variables
  --host--height: calc(
    (var(--item--height) * var(--list--item-count)) + var(--head--margin) + 3rem
  );
  --host--width: calc(var(--font-size) * 12);
  --host--position: sticky;
  --host--top: calc(var(--toolbar-height, 20vh) + 5vh);
  --host--padding-top: 0px;
  --list--width: inherit;
}

@keyframes circle {
  from {
    clip-path: circle(0% at top right);
  }
  to {
    clip-path: circle(125%);
  }
}

:host {
  --host--position: sticky;
  --host--background: transparent;
  //Dimensions
  width: var(--host--width);
  //Layout
  top: var(--host--top);
  overflow: visible;
  position: var(--host--position);
  /// Grid
  display: flex;
  flex-direction: column;
  height: var(--host--height);
  background: var(--host--background);
  padding-top: var(--host--padding-top);
  @include mix-append-host-state('[mobile]') {
    --host--width: 100vw;
    --host--top: calc(var(--toolbar-height) - 1rem);
    --host--height: 100vh;
    --host--position: fixed;
    --host--background: var(--primary-12);
    --font-size: 1.25rem;
    --item--font-color: white;
    align-items: center;
    clip-path: circle(0% at 90% -10%);
    transition-property: background-color clip-path;
    transition: clip-path 1s cubic-bezier(0.25, 1, 0.3, 1),
      background-color 2s cubic-bezier(0.25, 1, 0.3, 1);
    --host--padding-top: 3rem;
    @include mix-append-host-state('[open]') {
      clip-path: circle(125%);
      --host--background: var(--gray-12);
    }
  }
}

.toc {
  &__list {
    width: var(--list--width);
    grid-area: content;
    height: calc(var(--host--height) - var(--head--margin));
    display: block;
    &__link-icon {
      vertical-align: middle;
    }
    @include host(mobile) {
      --list--width: 75vw;
      display: flex;
      flex-direction: column;
      align-items: center;
      overflow: hidden;
    }
  }
  /* &__track {
        grid-area: track;
        width: var(--track--width);
         :host([mobile]) & {
            grid-area: none;
        }
    }*/
  &__head {
    grid-area: header;
    border-bottom: 1px solid var(--gray-7);
    font: var(--list--header-font);
    height: var(--head--margin);
  }
}

/*
.track {
    //Dimensions
    height: var(--track--height); //Layout
    position: absolute;
    //Transforms
    transform: scaleY(var(--list--item-count));
    will-change: transform;
    transition: transform var(--item--transition--timing) cubic-bezier(0.075, 0.82, 0.165, 1);
    transform-origin: top left;
    //Misc
    border: solid var(--primary-7);
    border-width: 0 0 0 2px;
}
*/

ul {
  margin: 0px;
  padding: 0px;
}

.list {
  padding-left: 0.5rem;
  margin: 0;
  position: absolute;
  list-style-type: none;
  //Small offset to account for the first item being inline with the top of the scrollspy
  transform: translateY(calc(-1 * var(--item--height) / 1.5));
  width: var(--list--width);
  height: var(--list--height);
  padding-left: calc(var(--font-size) * 2);
  &__sublist {
    padding-left: calc(0.75 * var(--font-size));
    opacity: 0;
    padding-bottom: 2rem;
    position: absolute;
    width: inherit;
    height: inherit;
    &[data-expanded] {
      opacity: 1;
    }
  }
  @include host(mobile) {
    @include mix-reset-list;
    --list--width: 75vw;
    --list--height: 100%;
    border-bottom: 1px dotted gray;
  }
}

@mixin button-reset {
  border: none;
  background: none;
  margin: 0px;
  padding: 0px;
}

hicks-list-item {
  height: var(--item--height);
  //Layout
  display: list-item;
  position: absolute;
  padding-left: 0.5em;
  //Transforms
  transform: translateY(0px);
  will-change: transform opacity;
  transition-property: transform opacity;
  transition: var(--item--transition--timing) cubic-bezier(0.25, 1, 0.3, 1);
  //Misc
  font: var(--item--font);
  min-width: 15ch;

  opacity: 0;
  @include host(mobile) {
    --item--font-weight: 300;
  }

  ul[data-expanded] > & {
    transition-delay: calc(var(--item--index) * 200ms);
    opacity: 1;
    transform: translateY(
      calc(
        (var(--item--index, 0) + var(--item--offset, 0)) *
          var(--item--height, 1rem)
      )
    );
  } /*
  &__content {
    width: calc(var(--host--width) - var(--font-size) * 2);
    position: absolute;
    z-index: 2;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    @include host(mobile) {
      width: inherit;
      height: 100%;
    }
    &__link {
      color: var(--item--font-color);
      text-decoration: none;
      z-index: 1;
      position: relative;
      @include mix-text-ellipsis;
      @include host(mobile) {
        width: inherit;
      }
      &:hover,
      &.is-active {
        color: var(--primary-8);
        text-shadow: currentColor 0.1px -0.1px, currentColor -0.1px 0.1px,
          currentColor 0.1px 0.1px, currentColor -0.1px -0.1px;
        transition: text-shadow var(--item--transition--timing);
      }
      &:hover {
        text-decoration: underline var(--secondary-9) 2px;
        text-underline-offset: 1px;
      }
    }
    &__expand-btn {
      @include button-reset;
      width: calc(var(--item--height) + 1em);
      height: var(--font-size);
      padding: 0px var(--font-size);
      position: relative;
      padding: 0.4rem;
    }
  }*/
}

.expand-icon {
  fill: black;
  transform: rotate(0deg);
  transition: transform 500ms cubic-bezier(0.25, 1, 0.3, 1);
  &.toggled {
    fill: blue;
    transform: rotate(180deg);
  }
}
