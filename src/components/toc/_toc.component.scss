@use 'mixins' as *;
@use 'styles/mixins/button' as button;
@use 'styles/mixins/shadow-root' as root;

:host {
  --font-size: 10pt;
  --item--font-weight: 400;
  --item--font: var(--item--font-weight) var(--font-size);
  //Item variables
  // --item--margin: calc(var(--font-size) * 0.825); // Padding around the item
  --item--height: calc(var(--font-size) * 2);
  --item--transition--timing: 0.5s;
  --item--font-color: var(--gray-11); //Dimensions
  --item--line-color: var(--gray-4); //Dimensions

  //List variables
  --head--margin: calc(var(--font-size) * 1.75);
  --list--item-count: 0;
  --list--header-font: bold calc(var(--font-size) * 1.25) var(--body-font),
    sans-serif;
  --list--top: 90px;
  //Track variables
  --track--height: calc(
    var(--item--height) + var(--head--margin) / var(--list--item-count)
  );
  --track--scale: scaleY(var(--list--item-count));
  --track--width: 2rem;
  //Host variables
  --host--height: calc(
    (var(--item--height) * var(--list--item-count)) + var(--head--margin) + 3rem
  );
  --host--width: calc(var(--font-size) * 12);
  --host--position: sticky;
  --host--top: calc(var(--toolbar-height, 20vh) + 5vh);
  --host--padding-top: 0px;
  --list--width: inherit;
}

@keyframes circle {
  from {
    clip-path: circle(0% at top right);
  }
  to {
    clip-path: circle(125%);
  }
}

:host {
  --host--position: sticky;
  --host--background: transparent;
  //Dimensions
  width: var(--host--width);
  //Layout
  top: var(--host--top);
  overflow: visible;
  position: var(--host--position);
  /// Grid
  display: flex;
  flex-direction: column;
  height: var(--host--height);
  background: var(--host--background);
  padding-top: var(--host--padding-top);
  @include root.state('[mobile]') {
    --host--width: 100vw;
    --host--top: calc(var(--toolbar-height) - 1rem);
    --host--height: 100vh;
    --host--position: fixed;
    --host--background: var(--primary-12);
    --font-size: 1.25rem;
    --item--font-color: white;
    align-items: center;
    clip-path: circle(0% at 90% -10%);
    transition-property: background-color clip-path;
    transition: clip-path 1s cubic-bezier(0.25, 1, 0.3, 1),
      background-color 2s cubic-bezier(0.25, 1, 0.3, 1);
    --host--padding-top: 3rem;
    @include mix-append-host-state('[open]') {
      clip-path: circle(125%);
      --host--background: var(--gray-12);
    }
  }
}

.toc {
  &__list {
    width: var(--list--width);
    grid-area: content;
    display: block;
    &__link-icon {
      vertical-align: middle;
    }
    &:host {
      @include root.state('[mobile]') {
        --list--width: 75vw;
        display: flex;
        flex-direction: column;
        align-items: center;
        overflow: hidden;
      }
    }
  }
  /* &__track {
        grid-area: track;
        width: var(--track--width);
         :host([mobile]) & {
            grid-area: none;
        }
    }*/
  &__head {
    grid-area: header;
    border-bottom: 1px solid var(--gray-7);
    font: var(--list--header-font);
    height: var(--head--margin);
  }
}

/*
.track {
    //Dimensions
    height: var(--track--height); //Layout
    position: absolute;
    //Transforms
    transform: scaleY(var(--list--item-count));
    will-change: transform;
    transition: transform var(--item--transition--timing) cubic-bezier(0.075, 0.82, 0.165, 1);
    transform-origin: top left;
    //Misc
    border: solid var(--primary-7);
    border-width: 0 0 0 2px;
}
*/

.list {
  padding: 0px;
  margin: 0px;
  list-style-type: none;
  :host {
    @include root.state('[mobile]') {
      @include mix-reset-list;
      --list--width: 75vw;
    }
  }
}
.link-text {
  color: var(--item--font-color);
  @include mix-text-ellipsis;
  & :hover {
    color: var(--primary-8);
  }
}

.expand-button {
  @include button.button(1.5rem, 15ch, 1rem);
}

.button__wrapper {
  display: flex;
  align-self: flex-end;
}
