@use 'mixins' as *;
@mixin host($state) {
     :host([mobile]) & {
        @content;
    }
}

:host {
    --font-size: 1rem;
    --item--font-weight: 400;
    --item--font: var(--item--font-weight) var(--font-size) var(--body-font), sans-serif;
    //Item variables
    --item--margin: calc(var(--font-size) * 0.825); // Padding around the item
    --item--height: calc(var(--font-size) + var(--item--margin));
    --item--transition--timing: 2s;
    --item--font-color: var(--gray-9); //Dimensions
    //List variables
    --head--margin: calc(var(--font-size) * 1.75);
    --list--item-count: 0;
    --list--header-font: bold calc(var(--font-size) * 1.25) var(--body-font), sans-serif;
    --list--top: 90px;
    //Track variables
    --track--height: calc( var(--item--height) + var(--head--margin) / var(--list--item-count));
    --track--scale: scaleY(var(--list--item-count));
    --track--width: 2rem;
    //Host variables
    --host--height: calc( (var(--item--height) * var(--list--item-count)) + var(--head--margin) + 3rem);
    --host--width: calc(var(--font-size) * 12);
    --host--position: sticky;
    --host--top: calc(var(--toolbar-height, 20vh) + 5vh);
    --host--padding-top: 0px;
    --list--width: inherit;
}

@keyframes circle {
    from {
        clip-path: circle(0% at top right);
    }
    to {
        clip-path: circle(125%);
    }
}

:host {
    --host--position: sticky;
    --host--background: transparent;
    //Dimensions
    width: var(--host--width);
    //Layout
    top: var(--host--top);
    overflow: visible;
    position: var(--host--position);
    /// Grid
    display: flex;
    flex-direction: column;
    height: var(--host--height);
    background: var(--host--background);
    padding-top: var(--host--padding-top);
    @include mix-append-host-state('[mobile]') {
        --host--width: 100vw;
        --host--top: calc(var(--toolbar-height) - 1rem);
        --host--height: 100vh;
        --host--position: fixed;
        --host--background: var(--primary-12);
        --font-size: 1.25rem;
        --item--font-color: white;
        align-items: center;
        clip-path: circle(0% at 90% -10%);
        transition-property: background-color clip-path;
        transition: clip-path 1s cubic-bezier(0.25, 1, 0.3, 1), background-color 2s cubic-bezier(0.25, 1, 0.3, 1);
        --host--padding-top: 3rem;
        @include mix-append-host-state('[open]') {
            clip-path: circle(125%);
            --host--background: var(--gray-12);
        }
    }
}

.toc {
    &__list {
        width: var(--list--width);
        grid-area: content;
        height: calc(var(--host--height) - var(--head--margin));
        display: block;
        overflow: hidden;
        &__link-icon {
            vertical-align: middle;
        }
        @include host(mobile) {
            --list--width: 75vw;
            display: flex;
            flex-direction: column;
            align-items: center;
            overflow: hidden;
        }
    }
    /* &__track {
        grid-area: track;
        width: var(--track--width);
         :host([mobile]) & {
            grid-area: none;
        }
    }*/
    &__head {
        grid-area: header;
        border-bottom: 1px solid var(--gray-7);
        font: var(--list--header-font);
        height: var(--head--margin);
    }
}


/*
.track {
    //Dimensions
    height: var(--track--height); //Layout
    position: absolute;
    //Transforms
    transform: scaleY(var(--list--item-count));
    will-change: transform;
    transition: transform var(--item--transition--timing) cubic-bezier(0.075, 0.82, 0.165, 1);
    transform-origin: top left;
    //Misc
    border: solid var(--primary-7);
    border-width: 0 0 0 2px;
}
*/

ul {
    margin: 0px;
    padding: 0px;
}

.list {
    @include mix-reset-list;
    padding-left: 0.5rem;
    margin: 0;
    position: relative;
    list-style-type: none;
    transform: translateY(calc(-1 * var(--item--height) / 1.5));
    width: var(--list--width);
    height: var(--list--height);
    &__sublist {
        @include mix-reset-list;
        padding-left: calc(1.5 * var(--font-size));
        opacity: 0;
        overflow: auto;
        padding-bottom: 2rem;
        &[data-expanded-list] {
            opacity: 1;
        }
    }
    @include host(mobile) {
        @include mix-reset-list;
        --list--width: 75vw;
        --list--height: 100%;
        border-bottom: 1px dotted gray;
    }
}

.expand-icon {
    fill: black;
    transform: rotate(0deg);
    transition: transform 500ms cubic-bezier(0.25, 1, 0.3, 1);
    &.toggled {
        fill: blue;
        transform: rotate(180deg);
    }
}